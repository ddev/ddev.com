---
/**
 * A single card used to represent a blog post. Should probably be placed in a flex grid.
 */
import type { CollectionEntry } from "astro:content"
interface Props {
  post: CollectionEntry<"blog">
}

import { getEntryBySlug } from "astro:content"
import { Picture } from "@astrojs/image/components"
import { getSlug, formatDate, getCategoryUrl } from "../lib/api"

const { post } = Astro.props
const { remarkPluginFrontmatter } = await post.render()

const author = await getEntryBySlug("authors", getSlug(post.data.author))
const authorImage = author.data.avatarUrl ?? null

const hasFeatureImage =
  Object.hasOwn(post.data, "featureImage") &&
  Object.hasOwn(post.data.featureImage, "src")

const featureImageUrl = hasFeatureImage
  ? post.data.featureImage.src
  : `/img/generic-thumbnail.png`

const featureImageAlt = hasFeatureImage ? post.data.featureImage.alt : ``

const firstCategory = post.data.categories.length
  ? post.data.categories[0]
  : null
---

{
  /* `isolation: isolate` is here to convince Safari not to display un-rounded corners during animation */
}
<div
  class="flex flex-col rounded-lg overflow-hidden"
  style="isolation: isolate;"
>
  <div class="flex-shrink-0">
    <Picture
      format={["webp"]}
      src={featureImageUrl}
      alt={featureImageAlt}
      aspectRatio={9/6}
      widths={[600]}
      width={600}
      height={400}
      fit="cover"
      class="block h-48 w-full object-cover relative"
    />
  </div>
  <div class="flex-1 bg-gray-100 p-6 flex flex-col justify-between">
    <div class="flex-1">
      <p class="text-sm font-mono text-indigo-600">
        <a href={getCategoryUrl(firstCategory)} class="hover:underline">
          {firstCategory}
        </a>
      </p>
      <a href={`/blog/${post.slug}`} class="block mt-2">
        <p class="text-xl font-semibold text-gray-900">
          {post.data.title}
        </p>
      </a>
    </div>
    <div class="mt-6 flex items-center">
      {
        authorImage && (
          <div class="flex-shrink-0">
            <a href={`/blog/author/${author.slug}`}>
              <span class="sr-only">{post.data.author}</span>
              <img
                class="h-10 w-10 rounded-full"
                src={authorImage}
                alt={`${post.data.author} avatar`}
              />
            </a>
          </div>
        )
      }
      <div class={authorImage ? `ml-3` : ``}>
        <p class="text-sm font-medium text-gray-900">
          <a href={`/blog/author/${author.slug}`} class="hover:underline">
            {post.data.author}
          </a>
        </p>
        <div class="flex space-x-1 text-sm text-gray-600">
          <time datetime={post.data.pubDate}
            >{formatDate(post.data.pubDate)}</time
          >
          <span aria-hidden="true"> &middot;</span>
          <span> {remarkPluginFrontmatter.minutesRead}</span>
        </div>
      </div>
    </div>
  </div>
</div>
