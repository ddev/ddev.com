---
import { marked } from "marked"
import { Picture } from "@astrojs/image/components"
import sizeOf from "image-size"

export interface Props {
  src: string
  alt: string
  caption?: string
  credit?: string
  shadow?: boolean
}

const { src, alt, caption = "", credit, shadow = false } = Astro.props

const imageDimensions = sizeOf(`public${src}`)

---

<figure class={`w-full mx-auto mb-24 z-10 px-6 lg:px-0`}>

      <div
        class={
          `block rounded-lg overflow-hidden` + (shadow ? ` shadow-xl` : ``)
        }
      >
        <Picture
          format={["webp"]}
          widths={[1800]}
          breakpoints={{ count: 3, maxWidth: 1800 }}
          aspectRatio={imageDimensions.width / imageDimensions.height}
          width={imageDimensions.width}
          height={imageDimensions.height}
          class="block rounded-lg"
          style="clip-path: inset(0% 0% 0% 0% round 0.5rem)"
          src={src}
          alt={alt}
        />
      </div>
  {
    (caption || credit) && (
      <figcaption class="text-sm font-mono mt-4">
        {caption && <span set:html={marked.parseInline(caption)} />}
        {credit && (
          <span class="text-gray-500">
            {caption && <span aria-hidden="true"> </span>}
            <span set:html={`${marked.parseInline(credit)}`} />
          </span>
        )}
      </figcaption>
    )
  }
</figure>
