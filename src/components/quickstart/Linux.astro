---
import Terminal from "@components/Terminal.astro"
import Tabs from "@components/Tabs.astro"
import CommunityCTA from "./CommunityCTA.astro"

export interface Props {
  latestVersion: string
}

const { latestVersion } = Astro.props
---

<div class="prose">
  <p class="text-gray-600 mb-16">
    Weâ€™ll install Docker and DDEV with your package manager, as detailed in the <a
      href="https://ddev.readthedocs.io/en/latest/users/install/ddev-installation/"
      >Linux installation docs</a
    >.
  </p>

  <h2 class="text-3xl mt-24">
    <small class="block font-mono text-xs text-gray-500">1/3</small>Install
    Docker
  </h2>

  <Tabs order={["Ubuntu", "CentOS", "Debian", "Fedora"]}>
    <Fragment slot="Ubuntu">
      <div class="prose py-5">
        <p>
          Follow the <a
            href="https://docs.docker.com/engine/install/ubuntu/"
            target="_blank">instructions on docs.docker.com</a
          >:
        </p>
        <Terminal
          type="ubuntu"
          code={`$ sudo apt-get update\n$ sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin`}
        />
      </div>
    </Fragment>
    <Fragment slot="CentOS">
      <div class="prose py-5">
        <p>
          Follow the <a
            href="https://docs.docker.com/engine/install/centos/"
            target="_blank">instructions on docs.docker.com</a
          >:
        </p>

        <Terminal
          type="ubuntu"
          code={`$ sudo yum remove docker /\ \n    docker-client /\ \n    docker-client-latest /\ \n    docker-common /\ \n    docker-latest /\ \n    docker-latest-logrotate /\ \n    docker-logrotate /\ \n    docker-engine\n$ sudo yum install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n$ sudo systemctl start docker`}
        />
      </div>
    </Fragment>
    <Fragment slot="Debian">
      <div class="prose py-5">
        <p>
          Follow the <a
            href="https://docs.docker.com/engine/install/debian/"
            target="_blank">instructions on docs.docker.com</a
          >:
        </p>

        <Terminal
          type="ubuntu"
          code={`$ sudo apt-get remove docker docker-engine docker.io containerd runc\n$ sudo apt-get update\n$ sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin`}
        />
      </div>
    </Fragment>
    <Fragment slot="Fedora">
      <div class="prose py-5">
        <p>
          Follow the <a
            href="https://docs.docker.com/engine/install/fedora/"
            target="_blank">instructions on docs.docker.com</a
          >:
        </p>

        <Terminal
          type="ubuntu"
          code={`$ sudo dnf remove docker /\ \n    docker-client /\ \n    docker-client-latest /\ \n    docker-common /\ \n    docker-latest /\ \n    docker-latest-logrotate /\ \n    docker-logrotate /\ \n    docker-selinux /\ \n    docker-engine-selinux /\ \n    docker-engine\n$ sudo dnf install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n$ sudo systemctl start docker`}
        />
      </div>
    </Fragment>
  </Tabs>
</div>

<div class="prose">
  <h2 class="text-3xl mt-24">
    <small class="block font-mono text-xs text-gray-500">2/3</small>Install DDEV
  </h2>

  <Tabs order={["Ubuntu", "CentOS", "Debian", "Fedora"]}>
    <Fragment slot="Ubuntu">
      <div class="prose py-5">
        <Terminal
          type="ubuntu"
          code={`$ curl -fsSL https://pkg.ddev.com/apt/gpg.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/ddev.gpg > /dev/null\n$ echo "deb [signed-by=/etc/apt/trusted.gpg.d/ddev.gpg] https://pkg.ddev.com/apt/ * *" | sudo tee /etc/apt/sources.list.d/ddev.list\n$ sudo apt update && sudo apt install -y ddev
`}
        />
      </div>
    </Fragment>
    <Fragment slot="CentOS">
      <div class="prose py-5">
        <Terminal
          type="ubuntu"
          code={`$ echo '[ddev]\nname=DDEV Repo\nbaseurl=https://pkg.ddev.com/yum/\nenabled=1\ngpgcheck=0' | sudo tee -a /etc/yum.repos.d/ddev.repo\n$ sudo dnf install --refresh ddev`}
        />
      </div>
    </Fragment>
    <Fragment slot="Debian">
      <div class="prose py-5">
        <Terminal
          type="ubuntu"
          code={`$ curl -fsSL https://pkg.ddev.com/apt/gpg.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/ddev.gpg > /dev/null\n$ echo "deb [signed-by=/etc/apt/trusted.gpg.d/ddev.gpg] https://pkg.ddev.com/apt/ * *" | sudo tee /etc/apt/sources.list.d/ddev.list\n$ sudo apt update && sudo apt install -y ddev
`}
        />
      </div>
    </Fragment>
    <Fragment slot="Fedora">
      <div class="prose py-5">
        <Terminal
          type="ubuntu"
          code={`$ echo '[ddev]\nname=DDEV Repo\nbaseurl=https://pkg.ddev.com/yum/\nenabled=1\ngpgcheck=0' | sudo tee -a /etc/yum.repos.d/ddev.repo\n$ sudo dnf install --refresh ddev`}
        />
      </div>
    </Fragment>
  </Tabs>

  <p>In the Terminal app, confirm that DDEV is installed: ðŸŽ‰</p>
  <Terminal type="ubuntu" code={`$ ddev -v\nddev version ${latestVersion}`} />
</div>

<div class="prose">
  <h2 class="text-3xl mt-24">
    <small class="block font-mono text-xs text-gray-500">3/3</small>Create a
    Project
  </h2>

  <p>Navigate to a project youâ€™d like to spin up with DDEV:</p>
  <Terminal type="ubuntu" code={`$ cd ~/dev/my-project`} />

  <p>
    Initialize the project by running the <a
      href="https://ddev.readthedocs.io/en/latest/users/usage/commands/#config"
      target="_blank"
      ><code>ddev config</code>
    </a> command:
  </p>
  <Terminal type="ubuntu" code={`$ ddev config`} />

  <p>
    Start the project for the first time. Youâ€™ll use the same command to start
    it later, too!
  </p>
  <Terminal type="ubuntu" code={`$ ddev start`} />

  <p>
    If itâ€™s a Composer project, you may also need to run <a
      href="https://ddev.readthedocs.io/en/latest/users/usage/commands/#composer"
      target="_blank"
      ><code>ddev composer install</code>
    </a>.
  </p>

  <p>
    Now run the <a
      href="https://ddev.readthedocs.io/en/latest/users/usage/commands/#launch"
      target="_blank">launch command</a
    > to open your project in a browser:
  </p>
  <Terminal type="ubuntu" code={`$ ddev launch`} />
</div>

<div class="prose">
  <h2 class="text-3xl mt-24">Explore & Enjoy!</h2>

  <p>
    Take a peek at your projectâ€™s new <code>.ddev/</code> directory. You can add
    this to your repo to share your DDEV config, edit <code
      >.ddev/ddev.yaml</code
    > to change <a
      href="https://ddev.readthedocs.io/en/latest/users/configuration/config/"
      target="_blank">project options</a
    >, or even go about your business and pretend this folder doesnâ€™t exist.
  </p>

  <p>
    Run the <a
      href="https://ddev.readthedocs.io/en/latest/users/usage/commands/#help"
      target="_blank"
      >help command
    </a> (or plain <code>ddev</code>) to see the actions you can take with the
    CLI:
  </p>

  <Terminal type="ubuntu" code={`$ ddev -h`} />

  <p>
    Use the <a
      href="https://ddev.readthedocs.io/en/latest/users/usage/commands/#describe"
      target="_blank"
      >describe command
    </a> to see a projectâ€™s parts and database connection details:
  </p>

  <Terminal type="ubuntu" code={`$ ddev describe`} />

  <p>
    If youâ€™re done working on a project and want to shut it down without
    removing anything, use the <a
      href="https://ddev.readthedocs.io/en/latest/users/usage/commands/#stop"
      target="_blank"
      >stop command
    </a>:
  </p>

  <Terminal type="ubuntu" code={`$ ddev stop`} />

  <p>
    If you were just kicking the tires and you want to permanently delete the
    project and its resources without touching your code, run the <a
      href="https://ddev.readthedocs.io/en/latest/users/usage/commands/#delete"
      target="_blank"
      >delete command
    </a>:
  </p>

  <Terminal type="ubuntu" code={`$ ddev delete`} />

  <p>
    DDEV will remove everything it created for the project and have no memory of
    its existence.
  </p>

  <p>
    To uninstall DDEV, first clean up its Docker bits and delete its files from
    your system:
  </p>

  <Terminal
    type="ubuntu"
    code={`$ ddev clean --all\n$ ddev hostname --remove-inactive\n$ rm -r ~/.ddev`}
  />

  <p>
    Remove the <code>ddev</code> binary:
  </p>

  <Terminal type="ubuntu" code={`$ sudo rm /usr/local/bin/ddev`} />

  <CommunityCTA />
</div>
