1
00:00:00,000 --> 00:00:06,920
Hi there. My name is Randy Fay. I'm one of the

2
00:00:06,920 --> 00:00:15,000
maintainers of the DDEV project and I want to give you a tour today of DDEV on

3
00:00:15,000 --> 00:00:23,920
Windows subsystem for Linux, WSL2. DDEV has supported WSL2 for a number of

4
00:00:23,920 --> 00:00:28,560
years but it's just gotten better all the time and in our latest release we

5
00:00:28,560 --> 00:00:33,240
even have an installer that installs it all the different ways that you can

6
00:00:33,240 --> 00:00:41,460
use. So I am going to go ahead and step through that. First of all let's just

7
00:00:41,460 --> 00:00:45,840
make sure that you might not be familiar with DDEV. DDEV is a Docker-based

8
00:00:45,840 --> 00:00:51,440
local development environment. It's mostly for web developers but it does all of

9
00:00:51,440 --> 00:00:57,960
the web things for you. It does node and NPM and it does PHP. It does all those

10
00:00:57,960 --> 00:01:04,560
things for you in a predictable, containerized environment. PHP and node

11
00:01:04,560 --> 00:01:10,840
developers use it. HTML, developers use it. It can be used a lot of different

12
00:01:10,840 --> 00:01:17,000
ways. You run the website on your own local computer. There's basically no

13
00:01:17,000 --> 00:01:22,240
configuration of the computer and you can run many projects or websites at

14
00:01:22,240 --> 00:01:27,480
the same time and each one can have a different configuration and your team can

15
00:01:27,480 --> 00:01:32,080
share that configuration and check it in. Because Docker does the lifting you

16
00:01:32,080 --> 00:01:38,400
don't have to even have anything like PHP or Composer on your host computer and

17
00:01:38,400 --> 00:01:43,440
deal with those complexities. DDEV has been around for quite a few years now

18
00:01:43,440 --> 00:01:49,560
and it's had first-class Mac, Linux, Windows and WSL2 support for really quite a

19
00:01:49,560 --> 00:01:55,320
long time. It works the same on every platform.

20
00:01:56,160 --> 00:02:08,120
WSL2 is a real Linux kernel and the instances of that of the Linux

21
00:02:08,120 --> 00:02:17,320
distribution built into all supports, all versions of Windows. This is an amazing

22
00:02:17,320 --> 00:02:22,960
thing that Microsoft would do this and they've been working at it now for it must

23
00:02:22,960 --> 00:02:30,440
be almost 10 years and they've done quite a good job. It's a different world but

24
00:02:30,440 --> 00:02:34,720
it's right there in Windows and it's quite good and after all these years the

25
00:02:34,720 --> 00:02:40,800
level of maturity is quite excellent. Nothing's perfect in any context but it's

26
00:02:40,800 --> 00:02:50,160
great stuff. Let's just talk about the WSL2 advantages and disadvantages. I

27
00:02:50,160 --> 00:02:59,560
love WSL2 but I'm a Linux guy from way back so for me it's having my favorite

28
00:02:59,560 --> 00:03:05,440
Linux right there in the midst of a very mature and wonderful GUI operating

29
00:03:05,440 --> 00:03:12,360
system. That's great for me. On the advantage side it gives me Linux with

30
00:03:12,360 --> 00:03:20,240
all the tools and power of Linux right there available to me anytime. With DDEV

31
00:03:20,240 --> 00:03:26,000
it's got great performance and web serving and you're working with an

32
00:03:26,000 --> 00:03:34,560
environment much like where you'll deploy to. It is worth working in

33
00:03:34,560 --> 00:03:40,080
environment that is like your deployment environment. Of course DDEV already

34
00:03:40,080 --> 00:03:48,000
does that for you inside the container but for you to work inside to use the

35
00:03:48,000 --> 00:03:53,680
command line with Linux tools is a great benefit because that's where your

36
00:03:53,680 --> 00:04:00,480
that's where your website will be deployed. So the disadvantages. Number one is the

37
00:04:00,480 --> 00:04:04,440
same thing. You've got Linux on your Windows machine. You've already had a

38
00:04:04,440 --> 00:04:08,520
thousand and thousand and thousand things to learn and remember and now

39
00:04:08,520 --> 00:04:13,640
there's a whole different context with Linux. So and those context switches

40
00:04:13,640 --> 00:04:19,720
between the the Windows side and the WSL side and the fact that there are two

41
00:04:19,720 --> 00:04:29,360
different file systems is you know it's extra complexity. So it requires

42
00:04:29,360 --> 00:04:33,960
learning and patience with yourself while you learn it. And the third

43
00:04:33,960 --> 00:04:42,600
thing is because the WSL 2 or the Linux file system it's called EXT4 is so

44
00:04:42,600 --> 00:04:48,080
much better for web serving and really better for anything that is a lot of

45
00:04:48,080 --> 00:04:58,080
files and you really have to work in the WSL 2 file system and all of the

46
00:04:58,080 --> 00:05:03,040
standard editors are perfectly capable of doing that. So you can use your

47
00:05:03,040 --> 00:05:08,320
favorite Windows editors but you need to use them against the WSL 2 file

48
00:05:08,320 --> 00:05:16,840
system. Microsoft built oh good old NTFS for Microsoft Word for huge files a

49
00:05:16,840 --> 00:05:22,320
few huge files and not for web apps but I'll show you how to do that as we go

50
00:05:22,320 --> 00:05:30,400
forward. So let's just take a look at the docs and what we're going to do here.

51
00:05:30,400 --> 00:05:37,400
There's a quick a quick doc and there's there's more extensive docs but what

52
00:05:37,400 --> 00:05:44,720
we're going to do is we're going to go to the "get started" page and we're going

53
00:05:44,720 --> 00:05:54,320
to go through all the things on my machine which is pretty close to not having

54
00:05:54,320 --> 00:05:59,840
anything on it. I skipped the part where I would have to reboot so that we can

55
00:05:59,840 --> 00:06:06,840
have a little continuity. So let's go take a look right quick at the at the get

56
00:06:06,840 --> 00:06:15,140
started page here. So here's our "get started" page, ddev.com/get-

57
00:06:15,140 --> 00:06:23,880
started and we're going to choose Windows here and here's the process that

58
00:06:23,880 --> 00:06:28,080
we're going to do. We've got three steps basically here. We're going to do a

59
00:06:28,080 --> 00:06:40,200
WSL-install then we're going to install an Ubuntu distro that is get the

60
00:06:40,200 --> 00:06:46,080
name deed of Ubuntu by the way is a classic distribution of Linux that has

61
00:06:46,080 --> 00:06:53,160
been around it must be close to 20 years that is very very well maintained and

62
00:06:53,160 --> 00:06:59,880
stable and very widely known. So that's why we prefer it. There are there are

63
00:06:59,880 --> 00:07:02,920
other ways to do other things but we're trying to keep you on the straight

64
00:07:02,920 --> 00:07:07,760
narrow here. So then we'll take a look and make sure that we've got our new

65
00:07:07,760 --> 00:07:13,080
distro going. Then we're going to run the deed of installer will download and

66
00:07:13,080 --> 00:07:20,880
run the deed of installer and then we will create a project in the in there. So

67
00:07:20,880 --> 00:07:28,600
that's the steps that we're going to do. So let's go ahead and do those. I'm going

68
00:07:28,600 --> 00:07:34,280
to switch over here and I'm going to open up the Windows terminal running

69
00:07:34,280 --> 00:07:40,520
PowerShell. It doesn't really matter what you're running here. PowerShell or CMD

70
00:07:40,520 --> 00:07:44,800
or get-bash. They'll all work the same. We're not doing anything particularly

71
00:07:44,800 --> 00:07:56,720
exciting. We're going to do a WSL-install and that did an escalation. Had I

72
00:07:56,720 --> 00:08:01,000
been doing that for the very first time on this machine after it did the

73
00:08:01,000 --> 00:08:05,720
install that we're looking at here it would force me to reboot and that's the

74
00:08:05,720 --> 00:08:12,160
part that we happen to be skipping in in my case. It also sometimes gives a bit

75
00:08:12,160 --> 00:08:19,200
of a bogus error message saying that it was missing some component because it's

76
00:08:19,200 --> 00:08:30,200
waiting for a reboot. So this has installed now the WSL-2 component with the

77
00:08:30,200 --> 00:08:37,000
current version and now it's getting the distro. But if I remember right it's

78
00:08:37,000 --> 00:08:40,320
not going to know what to do with the distro and we're still going to have to

79
00:08:40,320 --> 00:08:44,760
install the Ubuntu distro ourselves.

80
00:08:58,720 --> 00:09:05,960
No, I didn't do that this time. It depends on the state of your machine whether

81
00:09:05,960 --> 00:09:16,240
it does that. I'm going to set my local user here. I always use our fade and let's

82
00:09:16,240 --> 00:09:23,920
see if I can type it correctly. And so there I am and you'll see that it landed

83
00:09:23,920 --> 00:09:30,400
me in the machine, in the freshly created machine here. I don't really want to

84
00:09:30,400 --> 00:09:36,760
be there. I'll show you this in a minute. I'm going to do what we suggest and

85
00:09:36,760 --> 00:09:42,560
create one called DDO because the state of my machine it was able to just

86
00:09:42,560 --> 00:09:49,040
automatically create the Ubuntu distro without the other processes. So I'm

87
00:09:49,040 --> 00:09:59,040
going to say WSL-dash install-dash-name. Let's see we're going to say Ubuntu-dash-name-DDO.

88
00:09:59,040 --> 00:10:03,920
So we're going to just create one named DDO and the name doesn't matter. It's

89
00:10:03,920 --> 00:10:09,960
just to if you have more than one for whatever reason that may help you to

90
00:10:09,960 --> 00:10:18,960
remember which one is which. So we're just doing the same thing again that

91
00:10:18,960 --> 00:10:23,280
it automatically was doing with the Ubuntu distro and then we're going to

92
00:10:23,280 --> 00:10:27,480
delete the other one because we don't need it.

93
00:10:35,800 --> 00:10:42,040
Okay and it landed us in the Windows home which I don't really want it to be

94
00:10:42,040 --> 00:10:50,720
but I'm going to exit out of there. Now I'm going to do a WSL-L-V and we're

95
00:10:50,720 --> 00:10:56,760
going to see that we have two distros and they're both version two. If you see a

96
00:10:56,760 --> 00:11:02,360
version one there then something has gone terribly wrong and you would do a

97
00:11:02,360 --> 00:11:14,640
WSL-dash-set default version two and then you would have to recreate. So but

98
00:11:14,640 --> 00:11:20,440
that version two is the default. So if you're setting up WSL these days it's

99
00:11:20,440 --> 00:11:27,080
there and it's already the default and all those things. So what I'm going to do

100
00:11:27,080 --> 00:11:34,200
now is I'm going to set my DDEV one to be the default just makes things

101
00:11:34,200 --> 00:11:41,960
slightly easier and now you see the star is on DDEV and now I'm going to get rid

102
00:11:41,960 --> 00:11:53,680
of the other one with an unregister command and we only needed the one. So

103
00:11:53,680 --> 00:12:03,560
there we are we have a DDEV distro. I am going to close this PowerShell and

104
00:12:03,560 --> 00:12:08,600
open Windows terminal. Windows terminal if you haven't seen it around it's

105
00:12:08,600 --> 00:12:12,800
now a standard part of Windows and it's really quite an excellent step forward

106
00:12:12,800 --> 00:12:20,520
and when you install a distro you automatically get the things that you really

107
00:12:20,520 --> 00:12:26,880
need so it creates a new DDEV entry there. So I can just pop that and that's

108
00:12:26,880 --> 00:12:32,680
what that's my favorite thing to use for accessing the distro and you'll

109
00:12:32,680 --> 00:12:37,720
notice that when it opens a distro it opens it in the home directory which is

110
00:12:37,720 --> 00:12:43,080
where we want it to be. So right now this distro doesn't have much on it and

111
00:12:43,080 --> 00:12:48,600
so the thing that we're going to do is we're going to run the DDEV installer. So

112
00:12:48,600 --> 00:13:00,680
let's go and we will go to github.com, DDEV, and we'll go to releases, we'll

113
00:13:00,680 --> 00:13:07,920
get the latest one. We are on an AMD64 Windows machine which most of you are

114
00:13:07,920 --> 00:13:15,680
as well and so we want the DDEV Windows AMD64 installer for the latest

115
00:13:15,680 --> 00:13:22,680
release. So I'm going to get that one and then we're just going to run that

116
00:13:22,680 --> 00:13:38,880
install. So it did elevate, it did a UAC prompt to give us privileges to do

117
00:13:38,880 --> 00:13:45,800
this install and now I'm going to go and you see we have three choices here for

118
00:13:45,800 --> 00:13:49,840
the DDEV installation type and we'll talk about the other two choices right now.

119
00:13:49,840 --> 00:13:55,960
We do recommend the Docker CE approach and WSL2 but the others are totally

120
00:13:55,960 --> 00:14:03,360
valid and we'll talk about those toward the end of this session. So we've only

121
00:14:03,360 --> 00:14:09,160
got one distro right now so it's only offering us one choice here and all the

122
00:14:09,160 --> 00:14:15,240
normal things that one of these does and it's going to go through and it's

123
00:14:15,240 --> 00:14:22,960
mostly spending all of its time configuring that distro that we installed. We

124
00:14:22,960 --> 00:14:28,600
can actually watch it do it here. It's installing the required Linux packages,

125
00:14:28,600 --> 00:14:35,200
downloading them, installing them. These are things that we used to have a fairly

126
00:14:35,200 --> 00:14:43,480
complex PowerShell script to do that was a little awkward to run and now these

127
00:14:43,480 --> 00:14:50,480
are done by the by the installer for you. So it takes actually the first time

128
00:14:50,480 --> 00:14:55,920
you run this it has to install, it has to download and install everything but

129
00:14:55,920 --> 00:15:01,120
after that your distro has most of the things in it and you can rerun this, you

130
00:15:01,120 --> 00:15:05,720
can do an upgrade with it, you can rerun it as many times as you want and it

131
00:15:05,720 --> 00:15:12,960
does no harm. You can run it on the same distro again again again and it does

132
00:15:12,960 --> 00:15:22,320
no harm. So there we go. On the last page you see that we have a check box here

133
00:15:22,320 --> 00:15:29,760
to say, consider launching, consider visiting our support page. So we will do

134
00:15:29,760 --> 00:15:36,120
that. We do need your support. GitHub is a free and open source project with two

135
00:15:36,120 --> 00:15:42,940
people working all the time on it and a huge community making it happen but we

136
00:15:42,940 --> 00:15:47,700
need your sponsorship and we want to become a sustainable project. So please do

137
00:15:47,700 --> 00:15:55,900
consider supporting it yourself or getting your organization to support

138
00:15:55,900 --> 00:16:02,460
DDEV. Now there we are. We have finished that installation and now we're going to

139
00:16:02,460 --> 00:16:14,180
go and do a trivial install. So we're going to go back here to the DDEV distro.

140
00:16:14,180 --> 00:16:20,260
I'll just open it again. Here's the DDEV distro. Now we can see that DDEV is

141
00:16:20,260 --> 00:16:26,300
installed here and working and Docker is working. So we have all the all the

142
00:16:26,300 --> 00:16:33,460
piece parts that we need to go forward. I always make my projects in a subdirectory

143
00:16:33,460 --> 00:16:45,020
called Workspace. A lot of people use a subdirectory called Sites. I recommend you use a lower

144
00:16:45,020 --> 00:16:52,340
case S for that if you do. What we're going to do for our first round is we're just going

145
00:16:52,340 --> 00:16:59,340
to create a very very simple PHP file and turn that into a project because it shows you

146
00:16:59,340 --> 00:17:12,020
very quickly what we need to do. So I'm going to create a project called I'll call it test.

147
00:17:12,020 --> 00:17:20,100
I always use the I always use junk personally but I'm going to use tests for this one and

148
00:17:20,100 --> 00:17:27,580
I am going to put in there a file. I'm going to put a PHP file in there. Well actually

149
00:17:27,580 --> 00:17:36,340
I'm just going to put it I'm just going to put an HTML file. We're just going to put an

150
00:17:36,340 --> 00:17:47,580
index.html. The DDEV is very happy to have an index.html. Now I'm going to do a DDEV

151
00:17:47,580 --> 00:17:55,140
config and I can use just the defaults here. I could have done a DDEV config dash dash

152
00:17:55,140 --> 00:18:05,780
auto. Now I'm going to do a DDEV start and it's going to ask if it can do the usage

153
00:18:05,780 --> 00:18:15,900
statistics and such. We'll say yes and now it has to pull the images that it needs. This

154
00:18:15,980 --> 00:18:22,540
process of pulling the images is usually not very annoying. We are doing this from scratch

155
00:18:22,540 --> 00:18:29,060
the very very first time and so it's getting those but the next time we go to a project

156
00:18:29,060 --> 00:18:36,060
that uses the same images which is usually all of our projects using the same images.

157
00:18:36,060 --> 00:18:42,940
It doesn't have to download those are down those are now on your machine. So even though

158
00:18:43,020 --> 00:18:49,900
this looks like a bit of work the first time around it's not that bad because every project

159
00:18:49,900 --> 00:19:00,580
is sharing the images and so it works out it works out fine. We can get going pretty quickly

160
00:19:00,580 --> 00:19:06,780
of course if you're on slower internet this will be this will be slower than my downloads

161
00:19:06,780 --> 00:19:11,780
here and you can have a cup of coffee. This internet doesn't let me have that cup of

162
00:19:11,780 --> 00:19:13,260
coffee for the downloads.

163
00:19:41,780 --> 00:19:57,140
Okay here it is it's done. I'm going to do a DDEV describe like it says like it suggests.

164
00:19:57,140 --> 00:20:06,260
So here are the basics of this project. Here's the main URL test.ddev.site. The Docker

165
00:20:06,260 --> 00:20:16,900
platform is WZL2 Docker CE. There are details about the individual containers and of course

166
00:20:16,900 --> 00:20:29,620
we can access our project four different ways. One is via the HTTPS trusted HTTPS. One is via

167
00:20:29,620 --> 00:20:38,180
the direct to the web you are the web IP address and port and then we can also use HTTPS

168
00:20:39,140 --> 00:20:44,500
and sometimes there's a reason to do that. I'm going to use the regular HTTPS so I'm just going

169
00:20:44,500 --> 00:20:51,780
to say DDEV launch which is how most of us do that most of the time and you see we have we

170
00:20:51,780 --> 00:21:01,620
are now a page here with our index.html and our URL is a trusted URL because DDEV in the install

171
00:21:01,620 --> 00:21:07,780
process installed all the things that we need for that and we have a valid certificate

172
00:21:08,340 --> 00:21:18,340
that the browser trusts here. So we have created a truly trivial little project by doing that

173
00:21:18,420 --> 00:21:27,220
and there we are. So now I would like to do a slightly so we've just done all the things. We

174
00:21:28,020 --> 00:21:35,300
did a whole project. We made a whole project. It's running and we have it in front of us.

175
00:21:36,020 --> 00:21:43,060
Now I'm going to do a slightly more complex project. I'm just going to do a Drupal 11 project

176
00:21:43,060 --> 00:21:53,940
because that's what's in my fingers and I'm going to do a DDEV config and this is all. Let me

177
00:21:53,940 --> 00:22:02,580
just show you here the many ways that you could do whatever you wanted to here. Here's a section

178
00:22:02,580 --> 00:22:10,260
in the docs called CMS Quick Starts. You can just search in the search per Quick Start and you see

179
00:22:11,220 --> 00:22:18,740
look at all of those that are just examples of what can be done. These are maintained examples

180
00:22:18,740 --> 00:22:29,300
that have automated testing but there are many many other uses of DDEV that are not listed here.

181
00:22:29,300 --> 00:22:35,700
Lots of people use it for lots and lots of things but these are the ones that have a recipe listed

182
00:22:35,780 --> 00:22:43,060
here in the Quick Start and I'm going to use the Drupal 11 recipe here.

183
00:22:46,740 --> 00:22:55,060
So I'm going to do a DDEV config, dash dash project, type equals Drupal 11, dash dash dot

184
00:22:56,260 --> 00:23:04,900
root equals web. I could have done this manually but I usually just type in the things that I know

185
00:23:04,900 --> 00:23:10,740
because I do it often and now I'm going to do a DDEV composer create project,

186
00:23:13,140 --> 00:23:19,620
Drupal slash recommended project. So this is using Composer create project under the good

187
00:23:20,260 --> 00:23:27,060
to do all the things that you need to do to get a project going with Drupal 11.

188
00:23:28,660 --> 00:23:34,580
There are obviously many ways to do this. I could have checked out. I could have checked out a

189
00:23:34,660 --> 00:23:42,500
project. In fact, I do that often or we could do the Composer method which is what we have here.

190
00:23:43,940 --> 00:23:47,700
Composer create project happens to start the project. So

191
00:23:57,140 --> 00:24:01,460
there it is. It's already done and now if I do a DDEV launch here

192
00:24:04,740 --> 00:24:10,100
I can actually go through the process here and I'll just do that. Usually I would use Drush at

193
00:24:10,100 --> 00:24:18,340
this point to do a very quick install but I will do a manual install here using the web UI.

194
00:24:18,340 --> 00:24:23,300
You see that it's already configured with the database and things like that. That's a convenience

195
00:24:23,300 --> 00:24:29,460
feature that DDEV provides that it does all of the provides automatically all of the database

196
00:24:29,460 --> 00:24:31,460
configuration and that kind of thing for you.

197
00:24:43,140 --> 00:24:46,500
Okay, we'll just fill in a couple of things here.

198
00:24:46,740 --> 00:25:00,660
In this case, we don't need updates so we will save it and

199
00:25:07,860 --> 00:25:15,940
there's our project all set up for us. It's a great thing to have a project

200
00:25:15,940 --> 00:25:23,140
to just experiment with here and this is fully functional project here. So we'll use this project

201
00:25:23,140 --> 00:25:31,060
in a couple of minutes for demonstrating Xdebug. I wish you were here right now because I'd ask

202
00:25:31,060 --> 00:25:37,220
you if you have any questions but let's switch back and see how much I left out of our presentation.

203
00:25:37,460 --> 00:25:47,780
So what we did was we did a WSL-dash install and on my machine that accidentally created a

204
00:25:47,780 --> 00:25:54,500
distro called Ubuntu that we didn't need. We did a WSL-dash update to make sure we were on the

205
00:25:54,500 --> 00:26:04,100
current version of WSL. Then we created a distro named DDEV which is what we've been using,

206
00:26:04,500 --> 00:26:13,620
where we were working just right here is where we were working in a distro called DDEV. It's

207
00:26:13,620 --> 00:26:31,140
an Ubuntu distro. So you can see that this is an Ubuntu 24.4 distro and then we ran the Windows

208
00:26:31,140 --> 00:26:38,900
installer and we basically chose the defaults in all the cases there. So that was our experiment

209
00:26:38,900 --> 00:26:49,700
that we just did. So here's the junk project that I didn't do. I did a test project and then

210
00:26:49,700 --> 00:26:58,100
here's a typo 3 example. I did a Drupal example instead and then I do want to show you a couple of

211
00:26:58,100 --> 00:27:03,700
things that you can do so that you're familiar with some of the tools that are out there.

212
00:27:03,700 --> 00:27:11,940
There are many tools but if I just go DDEV you'll see that we have a whole bunch of commands

213
00:27:11,940 --> 00:27:21,300
that you don't have to know all about. I can do a DDEV, let me just do this.

214
00:27:21,620 --> 00:27:33,780
I'm going to do a DDEV export, export, vb-pile equals dot, our balls, dv dot sql dot gz.

215
00:27:35,060 --> 00:27:41,940
And that will save our database into that file. I can do a DDEV snapshot

216
00:27:44,340 --> 00:27:49,300
and that will create a database snapshot which is a binary image of the database.

217
00:27:49,300 --> 00:27:55,620
I recommend that you keep snapshots of all your projects because you never know what can happen

218
00:27:55,620 --> 00:28:01,540
on your machine and these are regular files instead of the Docker volume where these things are

219
00:28:01,540 --> 00:28:11,940
usually stored. DDEV described we already showed. Always very useful. DDEV list shows you your

220
00:28:11,940 --> 00:28:19,220
projects that you have. We have two projects, a Drupal 11 and a base PHP project.

221
00:28:22,740 --> 00:28:31,300
What else did I promise to show you? Stop, power off, mysql snapshot. When you want to stop a project

222
00:28:32,420 --> 00:28:39,220
let's go back to the test project and I'm just going to say DDEV stop and I could have from anywhere

223
00:28:39,220 --> 00:28:46,900
said "ddev stop test" and it would have stopped the distro or the project name "test".

224
00:28:47,700 --> 00:28:54,820
So that now is stopped and it shows it is stopped.

225
00:29:00,020 --> 00:29:09,140
One of my favorites is DDEV mysql because I'm familiar on the command line so I can do a show

226
00:29:09,380 --> 00:29:26,740
tables here. What did I do wrong there? I didn't have a typo so I can just do a quick set of

227
00:29:26,740 --> 00:29:35,220
things like that. But DDEV has any number of other database browsers. A lot of people really like

228
00:29:35,220 --> 00:29:40,580
to have a GUI database browser and if you just search for database in the DDEV docs it'll link you

229
00:29:40,580 --> 00:29:52,980
to. There must be seven or eight different browsers. There's one for every taste and the PhpStorm

230
00:29:52,980 --> 00:30:02,020
and at VS Code integrations that we will look at in just a moment also have database integrations.

231
00:30:02,980 --> 00:30:10,660
So there's all those things and then a DDEV power off, DDEV power off shuts off all of your

232
00:30:10,660 --> 00:30:19,220
sites and all of your and any of the supporting containers like the router and the SSH agent

233
00:30:19,220 --> 00:30:28,580
so that everything is stopped. So okay so I'm going to start that one back up again and we will move

234
00:30:28,580 --> 00:30:36,900
on. It's worth exploring those various tools. There's very many of them there.

235
00:30:38,180 --> 00:30:43,780
Okay now we're going to do PhpStorm and we're going to connect up to this

236
00:30:45,220 --> 00:30:51,300
connect up to this project and take a look at the files and then we're going to

237
00:30:52,020 --> 00:30:59,460
we're going to turn on Xdebug and listen for it. So I'll see if I can do this correctly.

238
00:31:00,500 --> 00:31:06,740
It's possible that I won't be able to because I was fooling with it already today. So let's see

239
00:31:06,740 --> 00:31:17,140
how we do. And I already had a distro when I was fooling it with it called DDEV. So I'm going to

240
00:31:17,220 --> 00:31:26,180
here I am in PhpStorm and I want to open and the way you open in most apps is

241
00:31:28,100 --> 00:31:36,340
in this in this finder or picker window we will see that there's Linux down here and we want Linux

242
00:31:36,340 --> 00:31:46,580
and we want DDEV and we want home and one of the first things that I usually I'll show you in

243
00:31:46,580 --> 00:31:55,060
just a second. I usually make that a favorite but we're working on D11. D11 is the folder that we're

244
00:31:55,060 --> 00:32:03,860
going to use and you'll see that you see the PhpStorm knows how to navigate that and has worked

245
00:32:03,860 --> 00:32:08,900
all of that out. It wants to exclude the folders so I'll say sure you can do that

246
00:32:09,860 --> 00:32:16,740
and it did elevate in order to do that that you couldn't see I don't believe.

247
00:32:22,740 --> 00:32:30,340
And it's been doing all the things that we want it to do. Let me just show you what I was saying

248
00:32:30,420 --> 00:32:44,820
here. If I go into the windows explorer here and I go to Linux->DDEV->home->rfay.

249
00:32:48,340 --> 00:32:57,940
Arfe, oh here I want to just be in home. I like to drag that into my favorites very early when

250
00:32:57,940 --> 00:33:04,900
I'm working with something so I'll bring that over here and maybe put it right and not there.

251
00:33:09,700 --> 00:33:16,420
Oh it's got to go up higher here sorry. So I'm going to bring it right over here. You see I've

252
00:33:16,420 --> 00:33:22,500
already got an "rfay" for a different one but we're going to go here and we're going to take workspace

253
00:33:23,220 --> 00:33:33,300
and bring that over here into the favorites as well and we'll bring our test project, our D11 project

254
00:33:34,180 --> 00:33:37,140
over there as well so we'll have quick access to those.

255
00:33:40,980 --> 00:33:47,860
And now that will be available anytime we're doing an open in any tool that we're using any

256
00:33:47,860 --> 00:33:59,620
editor or anything else. So okay so we have it open now. We have our files, all of them.

257
00:34:00,660 --> 00:34:13,860
Here's the web and the index.php and I can edit and work on these all day long and I can use

258
00:34:13,940 --> 00:34:21,940
the git facilities of PhpStorm and I can use the terminal. Here's the terminal. You see the

259
00:34:21,940 --> 00:34:32,660
terminal has already got this is already using the terminal inside WSL2 inside our distro. So we can

260
00:34:32,660 --> 00:34:41,780
do it DDEV describe here and do all the things that we need to do. And now I'm going to demonstrate

261
00:34:42,660 --> 00:34:50,900
if you're with me this far you're probably already familiar with PhpStorm. So I won't demonstrate

262
00:34:50,900 --> 00:35:01,300
all the features of PhpStorm but the next thing that I want to do is install the DDEV plugin because

263
00:35:01,300 --> 00:35:08,820
it's really very nice. Very well maintained. We'll go here into settings and we'll go into plugins

264
00:35:08,820 --> 00:35:23,060
and go to Marketplace and DDEV and this is the one that we want right here.

265
00:35:23,060 --> 00:35:45,140
And I don't know for sure if we have to turn off to stop and start PhpStorm here.

266
00:35:46,020 --> 00:35:57,140
But you'll see that this DDEV detected is coming from the extension and that's showing us all

267
00:35:57,140 --> 00:36:04,100
the things. I don't know what the checking PHP installation is, what that message is or where it's

268
00:36:04,100 --> 00:36:14,820
coming from. But it looks like it's done. There we go. So the extension went in and found that DDEV

269
00:36:14,820 --> 00:36:23,460
had PHP 8.3 configured and we are set with that. So the extension does all the setup. The setup

270
00:36:23,460 --> 00:36:29,860
can be done manually without that as well but it works really very well and it sets up our there's

271
00:36:29,860 --> 00:36:36,500
not really anything to set up but it does what we need to do with Xdebug and that sort of thing.

272
00:36:36,500 --> 00:36:49,780
So what I'm going to do now is just demonstrate visiting a project with Xdebug going. So we will

273
00:36:52,420 --> 00:37:01,220
we will set up here if I can get to it from my tools. I have to get these tools out of the way

274
00:37:01,220 --> 00:37:10,100
or I can't get to it here. Let me just try this. There we go. I'm going to say start listening

275
00:37:10,100 --> 00:37:21,060
for PHP. So this is the way Xdebug works is that the IDE listens for a network connection

276
00:37:22,020 --> 00:37:33,300
and then the code the PHP code contacts the IDE to tell it what's going on with the bugging.

277
00:37:33,940 --> 00:37:45,620
So on the IDE we told it to listen. Now let's make a let's make a breakpoint here and I am going to

278
00:37:45,780 --> 00:37:59,700
I am going to do a `ddev xdebug on` to tell debug to do ddev to start doing its thing and let's remember

279
00:38:04,180 --> 00:38:12,180
what our project is our project is d11.ddev.site. So I can do a `ddev launch` for example or I can

280
00:38:12,180 --> 00:38:18,580
just visit in the browser either way and you see that it launched it here and it's sitting there

281
00:38:18,580 --> 00:38:25,700
and why is it sitting there it's sitting there because PhpStorm got the message stopped at the

282
00:38:25,700 --> 00:38:32,100
breakpoint is showing us the variables that are available there and it is ready to go so I can

283
00:38:32,100 --> 00:38:41,700
now step through I can use an F8 to step through I can use a F7 to step in here and step through

284
00:38:41,700 --> 00:38:50,180
all of my things and there I'm there I'm set so PhpStorm was awfully easy to set that up with

285
00:38:50,180 --> 00:38:58,020
I'm going to use an F9 to say go ahead and finish this off the all the things that we needed to do

286
00:38:58,020 --> 00:39:08,580
were done so that's how Xdebug works with PhpStorm and that's how PhpStorm works in a WSL2

287
00:39:08,580 --> 00:39:22,660
environment so let's go ahead and do the same thing now with we'll do the same thing with VS Code

288
00:39:23,140 --> 00:39:35,780
so I am going to exit here and now I will try with VS Code let's just see what our situation is

289
00:39:36,740 --> 00:39:44,980
so we have a fair starting place I might as well do in that `ddev xdebug off`. Xdebug doesn't cost as much

290
00:39:44,980 --> 00:39:51,380
in performance these days as it once did but most people turn it on when they want it and turn it

291
00:39:51,380 --> 00:40:00,020
off when they don't want it again so let's go ahead and do the same thing now with with

292
00:40:00,980 --> 00:40:11,700
VS Code so the way you start a WSL2 instance in VS Code is in your project here we are in the d11

293
00:40:11,700 --> 00:40:21,700
project in your project we do a code dot that's basically saying VS Code launch a VS Code that

294
00:40:21,700 --> 00:40:30,980
understands WSL2 using the current directory so that's installing the VS Code server

295
00:40:30,980 --> 00:40:40,100
there's a very easy way to pop this up and now it's running it here with the regular windows side

296
00:40:40,100 --> 00:40:54,820
VS Code interface that we need so now we need to include a couple of this is this is a clean more

297
00:40:54,820 --> 00:41:03,860
or less clean we'll see how clean it is we need to install a couple of extensions here so let's get

298
00:41:03,860 --> 00:41:17,380
our extensions we I imagine it's already got the WSL because that's how it works and now we need

299
00:41:18,660 --> 00:41:26,340
the PHP extension the PHP debug extension is what we're going to need the official one unfortunately

300
00:41:26,340 --> 00:41:33,060
it's very confusing how many different ones there can be but this is the one from Xdebug.org that's

301
00:41:33,060 --> 00:41:41,460
the one that we want so we'll get the PHP debug and and we're going to install it in our WSL world

302
00:41:41,460 --> 00:41:51,620
as well so we want that and then let's get the DDEV to DDEV extension so we're it's the DDEV

303
00:41:51,620 --> 00:41:57,860
manager that we want there's other one you see the old logo we don't know the history of that one

304
00:41:57,940 --> 00:42:03,940
but it is obsolete so we're going to take the DDEV manager and install that in WSL

305
00:42:11,860 --> 00:42:19,140
I don't know what happened to our PHP debug let's see WSL is required to open the remote window

306
00:42:28,660 --> 00:42:36,420
okay we got the DDEV manager

307
00:42:43,940 --> 00:42:52,260
not it looks like we got oh here we need the PHP debug we need that installed in WSL

308
00:42:53,060 --> 00:43:01,860
okay that looks like it probably good now let's go use the I'm not I don't have the same

309
00:43:01,860 --> 00:43:08,660
amount of experience with VS Code as I do with the jet brains i.e.s so I may stumble a little bit

310
00:43:08,660 --> 00:43:13,940
here but let's go to the explorer we're doing here exactly the same thing as we were doing elsewhere

311
00:43:14,580 --> 00:43:22,180
we can go to the install.tex we can go to the index.php here and here's our index.php

312
00:43:22,180 --> 00:43:37,140
and this is saying that the PHP executable path isn't set that I think our DDEV

313
00:43:39,220 --> 00:43:44,580
extension should have done that for us but let's see what happens here I'm going to just set

314
00:43:45,140 --> 00:43:52,740
breakpoint just like we did in PhpStorm and I'm going to use the terminal here

315
00:44:01,620 --> 00:44:10,740
so terminal works exactly the same let's get rid of this and you see that the the terminal

316
00:44:10,820 --> 00:44:22,820
is working very well it's also again in the distro and do DDEV list `ddev xdebug on`

317
00:44:25,140 --> 00:44:34,660
and so now in VS Code we have to tell it to run a debug so it was say run a debug

318
00:44:35,140 --> 00:44:42,900
and then you have to say listen for Xdebug and there it is you see this orange bar down here

319
00:44:43,620 --> 00:44:49,700
is the indicator that it is actually listening properly I find this a little awkward having to

320
00:44:49,700 --> 00:44:55,780
click here and then click here but we'll do that and now we're going to do the exact same thing

321
00:44:56,740 --> 00:45:06,660
we'll go back and in the terminal we'll do a DDEV launch it's the same as just visiting the page

322
00:45:06,660 --> 00:45:12,340
on the project and you see it paused here it's waiting to load it would have been long since done

323
00:45:12,820 --> 00:45:20,180
loading but the VS Code wants to run well it stopped on our breakpoint and up here are the variables

324
00:45:20,900 --> 00:45:29,380
that are running at that point and again here we can use the just pull this down just a

325
00:45:29,380 --> 00:45:37,380
little bit we can we can step in to a function call we can step over a function call

326
00:45:38,420 --> 00:45:45,540
and we have and it shows the it has little hints there f8 shift f8 you can do all the things

327
00:45:45,620 --> 00:45:53,620
that you would expect to do with your debugger so in both PhpStorm and

328
00:45:55,460 --> 00:46:02,340
nVS Code have database capabilities and all kinds of other things but and they do get for you

329
00:46:03,780 --> 00:46:10,260
I don't approve of that I think huge get from the command line person I'm a big believer that you

330
00:46:10,260 --> 00:46:16,820
know more what's going on when you do that but that's for another time but both PhpStorm and

331
00:46:16,820 --> 00:46:24,820
VS Code will do get for you and do all the things and let's see where we are now so we just did

332
00:46:25,540 --> 00:46:35,540
without any incident we just did VS Code so there was our PhpStorm step debugging here's our VS Code

333
00:46:35,620 --> 00:46:46,500
step-debugging and we we installed the extensions that we needed we did the code we did the `code .`

334
00:46:47,860 --> 00:46:54,900
did a ``ddev xdebug on``, did the VS Code listen thing and we visited a page and it stopped which is

335
00:46:55,540 --> 00:47:04,740
pretty stinking cool so okay let's go back and just talk about a couple of things that you might

336
00:47:04,740 --> 00:47:11,300
have questions about you have heard about docker desktop for years now and so what about docker

337
00:47:11,300 --> 00:47:20,020
desktop did have has supported docker desktop on both traditional windows and wsl2 for many years

338
00:47:20,660 --> 00:47:27,140
and it it works fine the installer as you saw when we went through the installer it was

339
00:47:27,140 --> 00:47:34,740
offering both of those docker desktop is commercial software and it has a very specific license

340
00:47:34,740 --> 00:47:40,260
agreement and your company may need to pay for you to be able to use it they're very strict about it

341
00:47:43,380 --> 00:47:50,580
and docker desktop unfortunately is not really very stable it seems to have new bugs and every

342
00:47:50,580 --> 00:47:57,940
release so compared to docker CE which is Linux based and very very well maintained by the same

343
00:47:57,940 --> 00:48:04,980
company I might add this is a company that we are very indebted to docker ink maintains all of

344
00:48:04,980 --> 00:48:12,020
these wonderful open source tools that we depend on that are components of every docker provider

345
00:48:12,100 --> 00:48:21,380
but docker desktop is not their finest hour it's focused on a lot of things that are not just

346
00:48:21,940 --> 00:48:28,900
doing the jobs that we need to do so docker desktop is fully supported if you would prefer to use

347
00:48:28,900 --> 00:48:35,140
that it's a little more complicated than what we just did but not much and then what about

348
00:48:35,140 --> 00:48:42,420
traditional windows so traditional windows is just the label that we give of if you're working on

349
00:48:42,420 --> 00:48:49,780
windows and the regular windows ntfs file system we just call that traditional windows as opposed

350
00:48:49,780 --> 00:48:57,220
to the various wsl2 approaches and we've supported it for many years the performance is not as good as

351
00:48:57,220 --> 00:49:05,940
with wsl2 and there's some initial startup sync time on a project that you may or may not find

352
00:49:06,580 --> 00:49:18,100
troublesome but in reality it's not bad it used to be terrible it used to be just you know when

353
00:49:18,100 --> 00:49:26,340
we first did wsl2 traditional windows was something that you would never want to do anymore because

354
00:49:26,340 --> 00:49:31,300
wsl2 is so much better but now the traditional windows has mutagen support

355
00:49:33,140 --> 00:49:40,500
it's actually tolerable and some teams use that deliberately because their teams are familiar with

356
00:49:40,500 --> 00:49:49,700
get basher power shell or cmd and so they do what they need to do there so there was a time

357
00:49:49,700 --> 00:49:56,020
than we that we were threatening to deprecate this approach and we have about 5% of our users that

358
00:49:56,020 --> 00:50:02,020
are on traditional windows and they're very defensive about that so we won't do that anymore plus

359
00:50:02,020 --> 00:50:12,180
it works a lot better than it used to okay so let's just take a quick look at what we did make sure

360
00:50:12,180 --> 00:50:22,500
that we that we know what it was so we talked about what ddev is what wsl2 is on windows and why we'd

361
00:50:22,500 --> 00:50:29,940
want to use it the advantages and disadvantages which are almost the same thing you get Linux you get

362
00:50:29,940 --> 00:50:39,300
Linux we did the install which is just three steps that shows on ddev.com slash get started we

363
00:50:39,300 --> 00:50:46,660
installed wsl on our machine which is just a one-time thing and then we ran the the installer

364
00:50:46,660 --> 00:50:53,700
and then we created a project that's what we did then so here's the dummy project that we did

365
00:50:55,940 --> 00:51:04,100
and we did we demonstrated some of the commands then we demonstrated accessing wsl2 project

366
00:51:04,100 --> 00:51:13,220
from PhpStorm and doing xt bug on it and then VS Code accessing it which is a little different

367
00:51:13,220 --> 00:51:19,860
using the code dot approach from inside your distro and then we talked about docker desktop and

368
00:51:19,860 --> 00:51:29,300
traditional windows and here we are with the resources for you obviously ddev.com has all the

369
00:51:29,300 --> 00:51:36,100
things and pointers to all the things but one of those things is the ddev docs and in there you'll

370
00:51:36,100 --> 00:51:48,980
find the wsl2 install docs in more detail there's a great drupal.org tutorial on all this and don't

371
00:51:48,980 --> 00:51:58,020
forget about the Microsoft docs at learn.microsoft.com and we would love to have you join us for support

372
00:51:58,100 --> 00:52:03,940
discussion learning from you discussing the problems that you have and everything else

373
00:52:05,300 --> 00:52:13,540
at in discord on stack overflow and the ddev issue queue and our project repo of course is

374
00:52:13,540 --> 00:52:21,140
github.com slash ddev slash ddev so join us we would love to have you and thanks for hanging

375
00:52:21,140 --> 00:52:21,860
with me today.

