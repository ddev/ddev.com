---
import { getCollection, render } from "astro:content"
import Layout from "../../../layouts/Layout.astro"
import BlogPostCard from "../../../components/BlogPostCard.astro"

/**
 * Tell Astro to build routes using our author ids.
 * https://docs.astro.build/en/reference/api-reference/#getstaticpaths
 */
export async function getStaticPaths() {
  const authors = await getCollection("authors")
  const posts = await getCollection("blog")

  return authors.map((author) => {
    const authorPosts = posts
      .filter((post) => post.data.author === author.data.name)
      .sort((a, b) => {
        return new Date(a.data.pubDate) > new Date(b.data.pubDate) ? -1 : 1
      })

    return {
      params: { id: author.id },
      props: {
        author: author,
        posts: authorPosts,
      },
    }
  })
}

const { author, posts } = Astro.props

const title = `Posts by ${author.data.name}`
const { Content } = await render(author)
---

<Layout
  title={title}
  description={`List of blog posts by ${author.data.name}.`}
>
  <main class="max-w-4xl mx-auto mb-24">
    <div class="lg:flex lg:space-x-12 py-24 px-6 lg:px-0">
      <h1 class="font-bold text-4xl dark:text-white">{author.data.name}</h1>
      <div class="prose mt-6 lg:mt-0 dark:prose-invert">
        <Content />
      </div>
    </div>

    <h2 class="text-base font-mono text-navy-300 px-6 lg:px-0">
      {author.data.firstName || author.data.name}â€™s {
        posts.length == 1 ? `Post` : `Posts`
      }
    </h2>

    <div
      class="mt-12 mb-24 max-w-lg mx-auto grid gap-5 lg:grid-cols-3 lg:max-w-none"
    >
      {posts.map((post) => <BlogPostCard post={post} />)}
    </div>
  </main>
</Layout>
